public class de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated$Tainted extends java.lang.Object implements soot.tagkit.Tag
{
    public static final java.lang.String NAME;
    private java.lang.String cause;
    final de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated this$0;

    public void <init>(de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated, java.lang.String)
    {
        de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated$Tainted this;
        de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated l1;
        java.lang.String cause;

        this := @this: de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated$Tainted;

        l1 := @parameter0: de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated;

        cause := @parameter1: java.lang.String;

        this.<de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated$Tainted: de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated this$0> = l1;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated$Tainted: java.lang.String cause> = cause;

        return;
    }

    public java.lang.String getName()
    {
        de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated$Tainted this;

        this := @this: de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated$Tainted;

        return "Tainted";
    }

    public byte[] getValue() throws soot.tagkit.AttributeValueException
    {
        de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated$Tainted this;
        java.lang.String $r0;
        byte[] $r1;

        this := @this: de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated$Tainted;

        $r0 = this.<de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated$Tainted: java.lang.String cause>;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <de.visuflow.ex2.updated.IntraproceduralAnalysisUpdated$Tainted: java.lang.String NAME> = "Tainted";

        return;
    }
}
